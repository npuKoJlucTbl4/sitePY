import unittest
import mypythonsite
from mypythonsite import app

class MyTestCase(unittest.TestCase):

    def setUp(self):
        self.app = app.test_client()

    def test_parse(self):
        info = mypythonsite.parse()
        self.assertIsNotNone(info, "parse() должна возвращать значение")
        self.assertIsInstance(info, list, "возвращаемое значение parse() должно быть списком")

    def test_index(self):
        response = self.app.get('/')
        self.assertEqual(response.status_code, 200)
        mypythonsite.name.pop() #убираем добавляемую вручную валюту
        self.assertIsNotNone(mypythonsite.name, "Переменная отвечающая за формирование списка валют пустая")
        dropdown_list_1 = response.data.decode('utf-8')
        self.assertRegex(dropdown_list_1, r'<option>.+</option>',
                         "Первый dropdown список должен содержать хотя бы один элемент")

    def test_form(self):
        mypythonsite.name = ['(036|AUD) Австралийский доллар', '(944|AZN) Азербайджанский манат', '(051|AMD) Армянских драмов', '(933|BYN) Белорусский рубль', '(975|BGN) Болгарский лев', '(986|BRL) Бразильский реал', '(348|HUF) Венгерских форинтов', '(410|KRW) Вон Республики Корея', '(704|VND) Вьетнамских донгов', '(344|HKD) Гонконгский доллар', '(981|GEL) Грузинский лари', '(208|DKK) Датская крона', '(784|AED) Дирхам ОАЭ', '(840|USD) Доллар США', '(978|EUR) Евро', '(818|EGP) Египетских фунтов', '(356|INR) Индийских рупий', '(360|IDR) Индонезийских рупий', '(398|KZT) Казахстанских тенге', '(124|CAD) Канадский доллар', '(634|QAR) Катарский риал', '(417|KGS) Киргизских сомов', '(156|CNY) Китайский юань', '(498|MDL) Молдавских леев', '(554|NZD) Новозеландский доллар', '(934|TMT) Новый туркменский манат', '(578|NOK) Норвежских крон', '(985|PLN) Польский злотый', '(946|RON) Румынский лей', '(960|XDR) СДР (специальные права заимствования)', '(941|RSD) Сербских динаров', '(702|SGD) Сингапурский доллар', '(972|TJS) Таджикских сомони', '(764|THB) Таиландских батов', '(949|TRY) Турецких лир', '(860|UZS) Узбекских сумов', '(980|UAH) Украинских гривен', '(826|GBP) Фунт стерлингов Соединенного королевства', '(203|CZK) Чешских крон', '(752|SEK) Шведских крон', '(756|CHF) Швейцарский франк', '(710|ZAR) Южноафриканских рэндов', '(392|JPY) Японских иен', '(643|RUB) рубль Российской Федерации']
        mypythonsite.value = [60.9802, 54.9658, 0.237259, 28.628, 51.2589, 18.4078, 0.25452, 0.067938, 0.00388016, 11.9445, 34.9708, 13.4381, 25.4437, 93.4419, 99.7264, 1.96343, 1.1205, 0.00587426, 0.208385, 68.2456, 25.6709, 1.0485, 12.8685, 5.2962299999999995, 56.1539, 26.6977, 8.62918, 23.3704, 20.0326, 123.3461, 0.854819, 68.9405, 8.54412, 2.55083, 2.91689, 0.0073716300000000005, 2.38569, 116.9893, 3.9290999999999996, 8.694280000000001, 102.3796, 5.0004800000000005, 0.610691, 1.0]
        response = self.app.post('/', data={'num_1': '10', 'droplist1': '(840|USD) Доллар США', 'droplist2': '(978|EUR) Евро'})
        self.assertEqual(response.status_code, 200)
        self.assertIn(b'10.0 USD = ', response.data, "вывод информации неверен")

if __name__ == '__main__':
    unittest.main()
